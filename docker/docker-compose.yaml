version: "3.4"
services:

  web:
    image: ss-web
    environment:
      - API_URL=${API_URL}
      - USE_SELF_SIGNED_SSL=${USE_SELF_SIGNED_SSL}
      - IpFilterRules=${IpFilterRules}
      - RealIpFrom=${RealIpFrom}
    ports:
      - 8080:8080
    depends_on:
      - api

  api:
    image: ss-api
    environment: 
      - LocationServicesClient__Username=${LocationServicesClientUsername}
      - LocationServicesClient__Password=${LocationServicesClientPassword}
      - LocationServicesClient__Url=${LocationServicesClientUrl}
      - Keycloak__Client=${KeycloakClient}
      - Keycloak__Authority=${KeycloakAuthority}
      - Keycloak__Secret=${KeycloakSecret}
      - Keycloak__Audience=${KeycloakAudience}
      - DatabaseConnectionString=${DatabaseConnectionString}
      - ASPNETCORE_URLS=${ASPNETCORE_URLS}
    ports:
      - 5000:5000
    volumes:
      - ./seed:/opt/app-root/data
    depends_on:
      - db
    command: >
      /bin/bash -c "
        echo Waiting for the database service to start up ...;
        sleep 10;
        /usr/libexec/s2i/run;"

  db:
    #Tried using a redhat image, but it required auth to get it.
    image: centos/postgresql-12-centos7
    environment:
      - POSTGRESQL_USER=${POSTGRESQL_USER}
      - POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRESQL_DATABASE=${POSTGRESQL_DATABASE}
      - POSTGRESQL_ADMIN_PASSWORD=${POSTGRESQL_ADMIN_PASSWORD}
    ports:
      - 5432:5432
    volumes:
      - ./tmp:/tmp2